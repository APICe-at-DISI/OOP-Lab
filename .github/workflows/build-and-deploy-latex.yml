name: Build and deploy
on:
  push:
    tags: '*'
    branches-ignore:
      - 'autodelivery**'
      - 'bump-**'
      - 'renovate/**'
    paths-ignore:
      - 'README.md'
      - 'CHANGELOG.md'
      - 'LICENSE'
  pull_request:
  workflow_dispatch:

jobs:
  Build-LaTeX:
    runs-on: ubuntu-latest
    steps:
      - uses: DanySK/compile-and-publish-all-latex@0.2.6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  Deploy-Archives:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: danysk/action-checkout@0.2.1
      - name: Autotag
        uses: DanySK/semver-autotag-action@master
      - name: Remove PMD/Checkstyle/Spotbugs configuration from the first labs
        run: ./cleanup_project_files.rb
      - name: Create archives
        run: |
          for file in workspace/*/; do
            name="${file#*/}"
            echo Creating "${name%*/}.zip" from $file
            zip -r "${name%*/}.zip" "$file"
          done
      - name: Release
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/') || github.ref == 'refs/heads/master'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TAG=$(git describe --tags --exact-match HEAD)
          hub release create -m "$(git tag -l --format='%(contents)' "$TAG")" "$TAG" || true
          gh release upload "$TAG" $(find ~+ -name \*.zip | tr "\n" " ") --clobber

  Refresh-Latest-Release:
    runs-on: ubuntu-latest
    needs: [Build-LaTeX, Deploy-Archives]
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/') || github.ref == 'refs/heads/master'
    steps:
      - name: Deploy
        env:
          GITHUB_TOKEN: ${{ secrets.AUTOMERGE_TOKEN }}
        run: |
          latest=$(gh release list -R APICe-at-DISI/OOP-Lab -L 1 | grep -Po 'Latest\s*\K(.*?)\s')
          echo Latest release is $latest, downloading
          gh release download $latest -R APICe-at-DISI/OOP-Lab
          echo Create destination release if needed
          gh release create -t "Release $latest" $latest -R APICe-at-DISI/OOP-Lab-public || true
          gh release upload -R 'APICe-at-DISI/OOP-Lab-public' $latest $(ls) --clobber
